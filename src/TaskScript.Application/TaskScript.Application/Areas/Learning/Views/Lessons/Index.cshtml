@model PaginationLessonsViewModel

@{
    ViewData["Title"] = "All lessons";
}

<div class="d-flex justify-content-between align-items-center">
    <h1>All lessons</h1>

    @if (this.User.Identity.IsAuthenticated)
    {
        <div>
            <a asp-action="Create" class="btn btn-outline-primary">Create New</a>
        </div>
    }
</div>

@if (this.Model.Lessons.Any())
{
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Lessons.First().Name)
                </th>
                <th>
                    Action links
                </th>
                @if (this.User.Identity.IsAuthenticated)
                {
                    <th>
                        Enroll/Disenroll
                    </th>
                }
            </tr>
        </thead>
        <tbody class="table-rows-vertically-centered">
            @foreach (GetAllLessonsViewModel lesson in Model.Lessons)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => lesson.Name)
                    </td>
                    <td>
                        @Html.ActionLink("Details", "Details", new { id = lesson.Id })
                        @if (this.User.Identity.IsAuthenticated)
                        {
                            <span>|</span>
                            @Html.ActionLink("Update", "Update", new { id = lesson.Id })

                            @if (this.User.IsInRole(RolesConstants.AdminRoleName))
                            {
                                <span>|</span>
                                @Html.ActionLink("Delete", "Delete", new { id = lesson.Id })
                            }
                        }
                    </td>
                    @if (this.User.Identity.IsAuthenticated)
                    {
                        <td>
                            @{
                                bool noSeatsLeft = lesson.SeatsLeft.HasValue && lesson.SeatsLeft.Value == 0;
                            }
                            @if (lesson.IsOld)
                            {
                                <button class="btn btn-outline-secondary w-25">Expired</button>
                            }
                            else
                            {
                                @if (lesson.CurrentUserIsEnrolled)
                                {
                                    <a asp-area="Learning"
                                       asp-controller="Lessons"
                                       asp-action="Disenroll"
                                       asp-route-id="@lesson.Id"
                                       class="btn btn-outline-danger w-25">
                                        Disenroll
                                    </a>
                                }
                                else
                                {
                                    @if (noSeatsLeft)
                                    {
                                        <button disabled class="btn btn-outline-secondary w-25">Enroll</button>
                                    }
                                    else
                                    {
                                        <a asp-area="Learning"
                                           asp-controller="Lessons"
                                           asp-action="Enroll"
                                           asp-route-id="@lesson.Id"
                                           class="btn btn-outline-success w-25">
                                            Enroll
                                        </a>
                                    }
                                }

                                @if (lesson.SeatsLeft.HasValue)
                                {
                                    <span class="text-secondary">(@lesson.SeatsLeft.Value seats left)</span>
                                }
                            }
                        </td>
                                }
                </tr>
                                }
        </tbody>
    </table>

    <nav aria-label="Lessons pagination">
        <ul class="pagination">
            @{
                bool isPreviousButtonDisabled = this.Model.CurrentPage == 1;
                string previousButtonDisabledClass = isPreviousButtonDisabled ? "disabled" : "";

                bool isNextButtonDisabled = this.Model.CurrentPage >= this.Model.TotalPages;
                string nextButtonDisabledClass = isNextButtonDisabled ? "disabled" : "";

                int previousPageIndex = this.Model.CurrentPage - 1;
                int nextPageIndex = this.Model.CurrentPage + 1;
            }

            <li class="page-item @previousButtonDisabledClass">
                <a class="page-link" asp-action="Index" asp-route-page="@previousPageIndex">Previous</a>
            </li>

            @for (int pageIndex = 1; pageIndex <= this.Model.TotalPages; pageIndex++)
            {
                bool isPageButtonActive = pageIndex == this.Model.CurrentPage;
                string pageButtonActiveClass = isPageButtonActive ? "active" : "";

                <li class="page-item @pageButtonActiveClass" aria-current="page">
                    <a class="page-link" asp-action="Index" asp-route-page="@pageIndex">@pageIndex</a>
                </li>
            }

            <li class="page-item @nextButtonDisabledClass">
                <a class="page-link" asp-action="Index" asp-route-page="@nextPageIndex">Next</a>
            </li>
        </ul>
    </nav>
}
else
{
    <p>No lessons to display.</p>
}
